
# Enfoque tradicional de predicciones a un nivel de agregación

```{r, echo=FALSE, include = FALSE}

#| code-fold: false
#| warning: false

source("../src/utils/utils.r", encoding = 'UTF-8')

```


Las predicciones de series de tiempo (jerárquicas o agrupadas) se  realizan a un nivel de agregación, para después ser agregadas para niveles superiores o desagregadas para niveles inferiores con el objetivo de obtener un conjunto de predicciones coherentes con el resto de la estructura.

**_Workflow_ para predicciones en estructuras agregadas**

El autor sugiere un _pipeline_ de funciones utiizando la pquetería `fpp3`

`data |> aggregate_key() |> model() |> reconcile() |> forecast()`

1. Crear o convertir la tabla de datos que contiene las series con los datos del último nivel inferior en un objeto `tsibble`.
2. Definir la estructrua de agregación por medio de la función `aggregate_key` y construir un objeto `tsibble` que también contenga las series agregadas.
3. Identificar un modelo de predicción para cada serie en todos los niveles de agreagcaión.
4. Especificar con la función `reconcile()` cómo se debe generar una predicción coherente a partir de los modelos elegidos
5. Utilizar la función `forecast()` para generar las predicciones para toda la estructura de agregación.


## Enfoque ascendente (bottom-up)

1. Generamos las predicciones para cada serie en el último nivel inferior (fondo - _bottom_)
2. Adicionamos para generar las predicciones de todas las series en la estructura.

Consideremos nuevamente el diagrama ejemplo para series de tiempo jerárquicas (ver XXX), generamos predicciones para $h$ periodos adelante para cada una de las series en el último nivel inferior, esto es $\hat{y}_{T+h|T}$:


$$
\begin{align}
 \tag{3.1.1}
 \hat{y}_{\text{AA},h}, \quad \hat{y}_{\text{AB},h}, \quad\hat{y}_{\text{AC},h}, \quad\hat{y}_{\text{BA},h},   \quad \text{y} \quad \hat{y}_{\text{BB},h}, \quad
\end{align}
$$
Adicionando, obtenemos predicciones coherentes para $h$ periodos adelante para el resto de las series:

$$
\begin{align}
 \tag{3.1.2}
 
 \tilde{y}_{h}=\hat{y}_{\text{AA},h}+\hat{y}_{\text{AB},h}+\hat{y}_{\text{AC},h}+\hat{y}_{\text{BA},h}  \\
 \tilde{y}_{\text{A},h}=\hat{y}_{\text{AA},h}+\hat{y}_{\text{AB},h}+\hat{y}_{\text{AC},h}, \\
 \text{y} \quad \tilde{y}_{\text{B},h}=\hat{y}_{\text{BA},h}+\hat{y}_{\text{BB},h}
 
\end{align}
$$

::: callout-note
**Se utiliza la notación tilde "~" para indicar predicción coherente.**
:::

Implementación `fpp3`:
* función `bu = bottom_up()` dentro de la función `reconcile()`.

::: callout-note
- Ventaja:las predicciones se realizan en el último nivel inferior lo que implica que no exista pérdida de información debida a la agragación.

- Desventaja: este nivel puede ser altamente ruidoso y dificultar el modelado y predicciones. Pensemos por ejemplo en los modelos de COVID donde la información de algunos países es altamente ruidosa debido al tamaño bajo de sus poblaciones que implica muestras bajas y mayor variabilidad en el agregado.
:::

## Enfoque descendente (top-down)

1. Generamos las predicciones para el Total de las series $y_t$
2. Desagregamos hacia abajo siguiendo la secuencia jerárquica.

Denotemos por $p_1,\dots, p_m$ un conjunto de proporciones de desagregación que determinan la forma en que debe distribuirse la serie Total para generar las predicciones de los niveles inferiores.

Si utilizamos proporciones en el ejemplo del diagrama para series de tiempo jerárquicas obtenemos:

$$
\begin{align}
 \tag{3.2.1}
 \tilde{y}_{\text{AA},t}=p_1\hat{y}_t, \quad \tilde{y}_{\text{AB},t}=p_2\hat{y}_t, \quad
 \tilde{y}_{\text{AC},t}=p_3\hat{y}_t, \quad \tilde{y}_{\text{BA},t}=p_4\hat{y}_t, \quad
 \tilde{y}_{\text{BB},t}=p_5\hat{y}_t.
\end{align}
$$
Habiendo obtenido las predicciones para $h$ periodos adelante de la serie última inferior, éstas se agregan para generar las predicciones coherentes para el resto de la series. 

Implementación `fpp3`:
* función `bu = top_down()` dentro de la función `reconcile()`.

_____________
*A continuación revisarempos los dos métodos más comunes para especificar las proporciones de desagregación utilizando las proporciones históricas de los datos.*


### Proporciones históricas promedio (**Average historical proportions**)

$$
\begin{align}
 \tag{3.2.2}
 p_j=\frac{1}{T}\sum_{t=1}^{T}\frac{y_{j,t}}{{y_t}} \quad j=1,\dots,m
\end{align}
$$

Cada proporción $p_j$ refleja el promedio de las proporciones históricas de las series en el último nivel inferior $y_{j,t}$ en el periodo $t=1,\dots,T$ relativo al total agregado en $y_t$.



**Implementación:**
Utilizando el paquete `fpp3`, este enfoque se realiza utilizando la función `top_down` ajustando el parámetro `method = average_proportions` 


### Proporciones de los promedios históricos (**Proportions of the historical averages**)


$$
\begin{align}
 \tag{3.2.3}
 p_j={\sum_{t=1}^{T}\frac{y_{j,t}}{T}}\Big/{\sum_{t=1}^{T}\frac{y_t}{T}} \quad \text{para} \quad j=1,\dots,m 
\end{align}
$$

Cada proporción $p_j$ captura el valor promedio histórico de la última serie inferior $y_{j,t}$ relativo al valor promedio del total agregado $y_t$.

**Implementación:**
Utilizando el paquete `fpp3`, este enfoque se realiza utilizando la función `top_down` ajustando el parámetro `method = proportion_averages`

::: callout-note
- Ventaja:simplicidad... sólo se requiuere generar predicciones para la serie más agregada del nivel superior mayor. Estos enfoques producen predicciones confiables para niveles agregados o con pocos datos.

- Desventaja: pérdida de información debida a la agregación; no es posible explotar las características de las series individuales, tales como estacionalidad, tendencia, días de asueto, etc.
:::



### Forecast proportions

En los métdos "*top-down*", al calcular las proporciones de desagreagación con información histórica, no se capturan cambios en el tiempo, perdemos precisión en las predicciones frente al método "*bottom-up*" en niveles inferiores de la jerarquía.

*¿Cómo lo resolvemos?*

**Proporciones basadas en las predicciones...**

Metodología:

*Jerarquía de $k=1$ nivel*:
- Predicciones iniciales: se generan a $h$ periodos adelante para todas las series (no son **coherentes** ni utilizables).
- Proporciones de Predicción: calculamos las proporciones para cada predicción inicial en el nivel último inferior agregando para todas las predicciones iniciales en este nivel.
- Con estas proporciones desagregamos el nivel superior de la predicción inicial  para generar predicciones coherentes para toda la jerarquía. 

*Para una jerarquía de $k$-niveles*:   
- Repite el proceso para cada nodo iniciando con el nivel superior y hacia abajo, dando como resultado una fórmula general para obtener las proporciones de predicción:


$$
\begin{align}
 \tag{3.2.4}
 p_j=\prod^{K-1}_{\ell=0}\frac{\hat{y}_{j,h}^{(\ell)}}{\hat{S}_{j,h}^{(\ell+1)}}
\end{align}
$$
donde:   
- $j=1,\dots,m$
- $\hat{y}_{j,h}^{(\ell)}$ es la predicción inicial a $h$ periodos de la serie correspondiente al nodo que está $\ell$ niveles por encima de $j$
- $\hat{S}_{j,h}^{(\ell+1)}$ es la suma de las predicciones iniciales a $h$ periodos por debajo del nodo que está $\ell$ niveles por encima de $j$ y está direcatmente conectada a ese nodo.

Con estas proporciones desagregamos las predicciiones iniciales del "**Total**" de las series para generar predicciones coherentes a $h$ periodos de las series en el último nivel inferior.

Para ejemplificar lo anterior, usaremos el conocido diagrama ejemplo para series de tiempo jerárquicas (ver XXX).

- Asumiremos que se han generado predicciones iniciales para cada serie en la jerarquía.
- Recordemos que en cualquier método "_top-down_", para las series en el máximo nivel superior "**Total**"  $\tilde{y}_{h}=\hat{y}_{h}$.

$$
\begin{align}
 \tag{3.2.5}
 \hat{y}_{\text{A},h}^{(1)} = \hat{y}_{\text{B},h}^{(1)} = \hat{y}_{h} =  \tilde{y}_{h};
\end{align}
$$

$$
\begin{align}
 \tag{3.2.6}
\hat{y}_{\text{AA},h}^{(1)} = \hat{y}_{\text{AB},h}^{(1)} = \hat{y}_{\text{AC},h}^{(1)} =  \hat{y}_{\text{A},h};
\end{align}
$$
$$
\begin{align}
 \tag{3.2.7}
\hat{y}_{\text{AA},h}^{(2)} = \hat{y}_{\text{AB},h}^{(2)} = \hat{y}_{\text{AC},h}^{(2)} = \hat{y}_{\text{BA},h}^{(2)} = \hat{y}_{\text{BB},h}^{(2)} = \hat{y}_{h}=\tilde{y}_{h};
\end{align}
$$

$$
\begin{align}
 \tag{3.2.8}
\hat{S}_{\text{AA},h}^{(1)} = \hat{S}_{\text{AB},h}^{(1)} = \hat{S}_{\text{AC},h}^{(1)} =  \hat{y}_{\text{AA},h}+\hat{y}_{\text{AB},h}+\hat{y}_{\text{AC},h};
\end{align}
$$

$$
\begin{align}
\tag{3.2.9}
\hat{S}_{\text{AA},h}^{(2)} = \hat{S}_{\text{AB},h}^{(2)} = \hat{S}_{\text{AC},h}^{(2)} = \hat{S}_{\text{A},h}^{(1)} = \hat{S}_{\text{B},h}^{(1)} = \hat{S}_{h}= \hat{y}_{\text{A},h}+\hat{y}_{\text{B},h};
\end{align}
$$


Las predicciones coherentes están dadas por (partiendo de la rama izquierda más alejada de la jerarquía):
 
$$
\begin{align}
 \tag{3.2.10}
 \tilde{y}_{\text{A},h} = \Bigg(\frac{\hat{y}_{\text{A},h}}{\hat{S}_{\text{A},h}^{(1)}}\Bigg)\tilde{y}_{h} =
 \Bigg(\frac{\hat{y}_{\text{AA},h}^{(1)}}{\hat{S}_{\text{AA},h}^{(2)}}\Bigg) \tilde{y}_{h}
\end{align}
$$
y

$$
\begin{align}
 \tag{3.2.11}
  \tilde{y}_{\text{AA},h} = \Bigg(\frac{\hat{y}_{\text{AA},h}}{\hat{S}_{\text{AA},h}^{(1)}}\Bigg)
  \tilde{y}_{\text{A},h} = \Bigg(\frac{\hat{y}_{\text{AA},h}}{\hat{S}_{\text{AA},h}^{(1)}}\Bigg)
  \Bigg(\frac{\hat{y}_{\text{AA},h}^{(1)}}{\hat{S}_{AA,h}^{(2)}}\Bigg)
  \tilde{y}_{h}.
\end{align}
$$  
Por consecuencia:
  
$$
\begin{align}
 \tag{3.2.12}
  p_1=\Bigg(\frac{\hat{y}_{\text{AA},h}}{\hat{S}_{\text{AA},h}^{(1)}}\Bigg)
  \Bigg(\frac{\hat{y}_{\text{AA},h}^{(1)}}{\hat{S}_{AA,h}^{(2)}}\Bigg). 
\end{align}
$$
Similarmente para las otras proporciones.


**Implementación:**
Utilizando el paquete `fpp3`, este enfoque se realiza utilizando la función `top_down` ajustando el parámetro `method = forecast_proportions`. Este parámetro es la selección por default para la función `top_down` cuando éste no se especifica.

::: callout-note
- Desventaja (para todos los métodos `top-down`): las predicciones coherentes que se generan no son insesgadas aún cuando la base de predicción sea insesgada.
:::


## Enfoque *middle-out*

Este método combina los enfoques _bottom-up_ y _top-down_ y se utiliza estrictamente para estructuras de agregación jerárquica.

1. Elegir un nivel intermedio para el cual se realizan las predicciones de todas las series en este nivel
2. Para las series superiores, se generan predicciones coherentes utilizando el enfoque _bottom-up_ agregando las predicciones del nivel medio hacia "arriba". 
3. Para las series inferiores, se generan predicciones coherentes utilizando el enfoque _top-down_ agregando las predicciones del nivel medio hacia "abajo".

Implementación:

- función `middle_out()`.  
- Especificar el nivel medio con el argumento `level`.  
- Seleccionar el enfoque _top-down_ con el argumento `method`.  

